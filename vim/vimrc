" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Enable syntax highlighting.
syntax on

" Automatically indent when adding a curly bracket, etc.
set smartindent

" Use UTF-8.
set encoding=utf-8

" Show line number, cursor position
set ruler

" Display incomplete commands.
set showcmd

" Search as you type.
set incsearch

" Show editing mode
set showmode

" How many lines of history to remember
set history=1000

" Use system clipboard as default paste/delete/yank register
set clipboard=unnamed

" Display incomplete commands.
set showcmd

" If there are caps, go case-sensitive
set ignorecase
set smartcase

" Shell-like completions
set wildmode=longest:full

" Turn on wildmenu
set wildmenu

" Do not redraw while running macros (much faster) (LazyRedraw)
set lazyredraw

" You can change buffer without saving
set hidden

" Show matching brackets
set showmatch

" Do not save backups
set nobackup

" Keep 5 lines (top/bottom) for scope
set scrolloff=5

" Keep 5 lines at the size
set sidescrolloff=5

" Always show the status line
set laststatus=2

" Do not wrap strings
set nowrap

" Set fold method
set foldmethod=marker

" Place case labels under switch() (C language)
set cinoptions=:0

" Persistent undo
set undofile
set undodir=~/.vimundo

" Highlight search
set hlsearch

" When editing a file, always jump to the last known cursor position.
" Don't do it when the position is invalid or when inside an event handler
" (happens when dropping a file on gvim).
autocmd BufReadPost *
			\ if line("'\"") > 0 && line("'\"") <= line("$") |
			\   exe "normal g`\"" |
			\ endif

" Unwanted whitespaces
highlight link ExtraWhitespace Error
match ExtraWhitespace /\s\+$\| \+\ze\t/

" Customize statusline
set statusline=%<%f%=\ [%1*%M%*%n%R%H%W]\ %-7(%y%)\ %5l,%-5(%c%V%)\ %P
highlight StatusLine ctermfg=black

" Change colorscheme
colorscheme my

" spec changelog
let g:spec_chglog_format="%a %b %d %Y Kirill A. Shutemov <kas@altlinux.org>"
let g:spec_chglog_prepend=1
