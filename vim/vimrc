" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Enable syntax highlighting.
syntax on

" Automatically indent when adding a curly bracket, etc.
set smartindent

" Use UTF-8.
set encoding=utf-8

" Show offset of line relative to current
set relativenumber

" Enable use of mouse all modes
set mouse=a

" Show line number, cursor position
set ruler

" Display incomplete commands.
set showcmd

" Search as you type.
set incsearch

" Show editing mode
set showmode

" How many lines of history to remember
set history=1000

" Use system clipboard as default paste/delete/yank register
set clipboard=unnamed

" If there are caps, go case-sensitive
set ignorecase
set smartcase

" Shell-like completions
set wildmode=longest,full

" Turn on wildmenu
set wildmenu

" Do not redraw while running macros (much faster) (LazyRedraw)
set lazyredraw

" You can change buffer without saving
set hidden

" Show matching brackets
set showmatch

" Do not save backups
set nobackup

" Keep 5 lines (top/bottom) for scope
set scrolloff=5

" Keep 5 lines at the size
set sidescrolloff=5

" Always show the status line
set laststatus=2

" Do not wrap strings
set nowrap

" Set fold method
set foldmethod=marker

" Set <Leader>
let mapleader=","

" Persistent undo
set undofile
set undodir=~/.vimundo

" Highlight search
set hlsearch

" Symbols to indicate tabstops and EOLs when 'list' is set
set listchars=tab:▸\ ,eol:¬

" Indicate wrapped lines
set showbreak=…

" Split vertical windows right to the current windows
set splitright

" Split horizontal windows below to the current windows
set splitbelow

" Automatically save before :next, :make etc.
set autowrite

" Enable filetype plugins
filetype plugin indent on

" Use both cscope and ctag for ‘ctrl-]’, ‘:tag’, and ‘vim -t’
set cscopetag

" Add cscope connection if database found
if filereadable("cscope.out")
	cscope add cscope.out
endif

" When editing a file, always jump to the last known cursor position.
" Don't do it when the position is invalid or when inside an event handler
" (happens when dropping a file on gvim).
autocmd BufReadPost *
			\ if line("'\"") > 0 && line("'\"") <= line("$") |
			\   exe "normal g`\"" |
			\ endif

" Unwanted whitespaces
highlight link ExtraWhitespace Error
match ExtraWhitespace /\s\+$\| \+\ze\t/

" Customize statusline
set statusline=%<%f%=\ [%1*%M%*%n%R%H%W]\ %-7(%y%)\ %5l,%-5(%c%V%)\ %P
highlight StatusLine ctermfg=black

au! BufRead,BufNewFile *qemu*/*.[ch] source ~/.vim/ftplugin/c-qemu.vim
au! BufRead,BufNewFile *notmuch*/*.{c,cc,h} source ~/.vim/ftplugin/c-notmuch.vim

" Change colorscheme
set background=dark
colorscheme solarized

" Pathogen load
runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()

" Remove search highlight
nnoremap <leader><space> :nohlsearch<CR>

" Compile
nmap <Leader>m :make<CR>

" vim-go
let g:go_fmt_command = "goimports"

" Tagbar
nmap <F8> :TagbarToggle<CR>
